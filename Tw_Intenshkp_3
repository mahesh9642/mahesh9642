package com.shalem.pattern;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.HashMap;

public class Voting {

    static HashMap<String, String> userVotes = new HashMap<>();
    static int votesA = 0;
    static int votesB = 0;
    static int votesC = 0;

    public static void main(String[] args) {
        // Create the frame
        JFrame frame = new JFrame("Online Voting System");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 500);

        // Create the panel
        JPanel panel = new JPanel();
        panel.setLayout(null); // Using null layout for absolute positioning

        // Create fonts
        Font font1 = new Font("ARIAL", Font.PLAIN, 30);
        Font font2 = new Font("LATO", Font.PLAIN, 20);
        Font font3 = new Font("FUTURA", Font.PLAIN, 20);

        // Create components
        JLabel headerLabel = new JLabel("Online Voting System");
        headerLabel.setFont(font1);
        headerLabel.setBounds(60, 0, 400, 59);

        JLabel nameLabel = new JLabel("Enter name");
        nameLabel.setFont(font2);
        nameLabel.setBounds(0, 40, 220, 50);

        JLabel phoneLabel = new JLabel("Enter phone");
        phoneLabel.setFont(font2);
        phoneLabel.setBounds(0, 90, 220, 50);

        JLabel voteLabel = new JLabel("Cast your vote here");
        voteLabel.setFont(font2);
        voteLabel.setBounds(0, 140, 220, 100);

        JTextField nameField = new JTextField();
        nameField.setFont(font3);
        nameField.setBounds(210, 50, 300, 30);

        JTextField phoneField = new JTextField();
        phoneField.setFont(font3);
        phoneField.setBounds(210, 100, 300, 30);

        JRadioButton partyAButton = new JRadioButton("Party A");
        partyAButton.setFont(font2);
        partyAButton.setBounds(0, 220, 150, 50);

        JRadioButton partyBButton = new JRadioButton("Party B");
        partyBButton.setFont(font2);
        partyBButton.setBounds(0, 270, 150, 50);

        JRadioButton partyCButton = new JRadioButton("Party C");
        partyCButton.setFont(font2);
        partyCButton.setBounds(0, 320, 150, 50);

        ButtonGroup partyGroup = new ButtonGroup();
        partyGroup.add(partyAButton);
        partyGroup.add(partyBButton);
        partyGroup.add(partyCButton);

        JButton submitVoteButton = new JButton("Submit Your Vote");
        submitVoteButton.setFont(font2);
        submitVoteButton.setBounds(170, 230, 150, 50);

        JButton checkResultsButton = new JButton("Check Results");
        checkResultsButton.setFont(font2);
        checkResultsButton.setBounds(170, 310, 150, 50);

        // Add components to panel
        panel.add(headerLabel);
        panel.add(nameLabel);
        panel.add(phoneLabel);
        panel.add(voteLabel);
        panel.add(nameField);
        panel.add(phoneField);
        panel.add(partyAButton);
        panel.add(partyBButton);
        panel.add(partyCButton);
        panel.add(submitVoteButton);
        panel.add(checkResultsButton);

        // Add action listeners
        submitVoteButton.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                String name = nameField.getText();
                String phone = phoneField.getText();

                if (name.isEmpty()) {
                    JOptionPane.showMessageDialog(new JFrame(), "Please Enter name");
                } else if (phone.isEmpty()) {
                    JOptionPane.showMessageDialog(new JFrame(), "Please Enter Phone no");
                } else if (userVotes.containsKey(name) || userVotes.containsValue(phone)) {
                    JOptionPane.showMessageDialog(new JFrame(), "You already voted");
                } else {
                    int i = JOptionPane.showConfirmDialog(new JFrame(), "Do you want to confirm your vote?");
                    if (i == 0) {
                        if (partyAButton.isSelected()) {
                            votesA += 1;
                        } else if (partyBButton.isSelected()) {
                            votesB += 1;
                        } else if (partyCButton.isSelected()) {
                            votesC += 1;
                        }
                        userVotes.put(name, phone);
                        nameField.setText("");
                        phoneField.setText("");
                        partyGroup.clearSelection();
                    }
                }
            }
        });

        checkResultsButton.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                String resultsMessage = String.format("Party A: %d votes\nParty B: %d votes\nParty C: %d votes", votesA, votesB, votesC);
                JOptionPane.showMessageDialog(new JFrame(), resultsMessage);
            }
        });

        // Add panel to frame
        frame.add(panel);

        // Set frame visibility
        frame.setVisible(true);
    }
}
